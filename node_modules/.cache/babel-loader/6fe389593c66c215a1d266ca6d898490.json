{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-example\\\\src\\\\pages\\\\Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport * as yup from 'yup';\nimport Firebase from 'firebase/app';\nimport { Box, MenuItem, Button, TextField, Grid, Hidden, makeStyles } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport firebase from '../config/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  rootSelect: {\n    '& .MuiSelect-root': {\n      display: 'flex'\n    }\n  },\n  rootButton: {\n    paddingTop: 0\n  },\n  rootVerifyButton: {\n    '& .MuiButton-label': {\n      padding: '0px 30px 0px 30px'\n    }\n  }\n}));\nexport const Login = props => {\n  _s();\n\n  const {\n    openLogin,\n    setOpenLogin\n  } = props;\n  const classes = useStyles();\n  const validationSchema = yup.object().shape({\n    phone: yup.string().required('Phone is required'),\n    countryCode: yup.number().required('Country is required')\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: openLogin ? /*#__PURE__*/_jsxDEV(Box, {\n      children: \"Login successful\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        countryCode: 65,\n        phone: 0\n      },\n      validationSchema: validationSchema,\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        const valueSubmitPhone = { ...values\n        };\n        let verify = new Firebase.auth.RecaptchaVerifier('recaptcha-container');\n        firebase.auth().signInWithPhoneNumber(`+${values.countryCode}` + valueSubmitPhone.phone, verify).then(confirmationResult => {\n          setSubmitting(false);\n          setOpenLogin(true);\n        }).catch(error => {\n          console.log(\"SMS not sent\");\n        });\n      },\n      children: ({\n        errors,\n        touched,\n        submitForm\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          margin: '20px 0px 20px 0px ',\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                name: \"countryCode\",\n                children: ({\n                  field\n                }) => /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"standard-select-currency\",\n                  value: field.value || '',\n                  onChange: field.onChange,\n                  name: field.name,\n                  variant: \"outlined\",\n                  error: !!errors.countryCode && touched.phone,\n                  helperText: !!errors.countryCode && touched.countryCode ? errors.countryCode : '',\n                  label: \"Country\",\n                  select: true,\n                  fullWidth: true,\n                  className: classes.rootSelect,\n                  children: props.countryCodeArray.map((item, key) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item.dial_code,\n                    children: `+${item.dial_code}`\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 53\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          margin: '20px 0px 20px 0px ',\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                name: \"phone\",\n                children: ({\n                  field\n                }) => /*#__PURE__*/_jsxDEV(TextField, {\n                  value: field.value || '',\n                  onChange: field.onChange,\n                  name: field.name,\n                  variant: \"outlined\",\n                  label: \"Phone Number\",\n                  error: !!errors.phone && touched.phone,\n                  helperText: !!errors.phone && touched.phone ? errors.phone : '',\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Hidden, {\n            only: \"xs\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: submitForm,\n              className: classes.rootVerifyButton,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n            only: \"lg\",\n            smUp: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: submitForm,\n              fullWidth: true,\n              className: classes.rootVerifyButton,\n              children: \"Verify Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              marginTop: \"20px\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"recaptcha-container\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 56\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Login;\nLogin.prototype = {\n  countryCodeArray: PropTypes.arrayOf(PropTypes.shape({\n    code: PropTypes.string,\n    dial_code: PropTypes.string\n  }))\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/project-example/src/pages/Login.tsx"],"names":["React","Formik","Form","Field","yup","Firebase","Box","MenuItem","Button","TextField","Grid","Hidden","makeStyles","PropTypes","firebase","useStyles","rootSelect","display","rootButton","paddingTop","rootVerifyButton","padding","Login","props","openLogin","setOpenLogin","classes","validationSchema","object","shape","phone","string","required","countryCode","number","values","setSubmitting","valueSubmitPhone","verify","auth","RecaptchaVerifier","signInWithPhoneNumber","then","confirmationResult","catch","error","console","log","errors","touched","submitForm","field","value","onChange","name","countryCodeArray","map","item","key","dial_code","prototype","arrayOf","code"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { FormikHelpers, Formik, Form, Field, FieldProps } from 'formik';\r\nimport * as yup from 'yup';\r\nimport Firebase from 'firebase/app';\r\nimport { Box, MenuItem, Button, TextField, Grid, Hidden, makeStyles, Snackbar } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport firebase from '../config/firebase';\r\nimport { ModelVerifyNumber } from '../model/ModelVerifyNumber';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    rootSelect: {\r\n        '& .MuiSelect-root': {\r\n            display: 'flex'\r\n        }\r\n    },\r\n    rootButton: {\r\n        paddingTop: 0\r\n    },\r\n    rootVerifyButton: {\r\n        '& .MuiButton-label': {\r\n            padding: '0px 30px 0px 30px'\r\n        }\r\n\r\n    }\r\n}));\r\n\r\nexport const Login = (props: {\r\n    countryCodeArray: Array<{\r\n        code: string,\r\n        dial_code: string\r\n    }>,\r\n    openLogin: boolean,\r\n    setOpenLogin: () => void\r\n}) => {\r\n    const { openLogin, setOpenLogin } = props;\r\n    const classes = useStyles();\r\n    const validationSchema = yup.object().shape({\r\n        phone: yup.string()\r\n            .required('Phone is required'),\r\n        countryCode: yup.number()\r\n            .required('Country is required'),\r\n    })\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {openLogin ? <Box>Login successful</Box> : <Formik\r\n                initialValues={{\r\n                    countryCode: 65,\r\n                    phone: 0\r\n                }}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(\r\n                    values: ModelVerifyNumber,\r\n                    { setSubmitting }: FormikHelpers<ModelVerifyNumber>\r\n                ) => {\r\n\r\n                    const valueSubmitPhone = { ...values };\r\n                    let verify = new Firebase.auth.RecaptchaVerifier('recaptcha-container');\r\n                    firebase.auth().signInWithPhoneNumber(`+${values.countryCode}` + valueSubmitPhone.phone, verify).then((confirmationResult) => {\r\n                        setSubmitting(false);\r\n                        setOpenLogin(true);\r\n                    }).catch((error: {}) => {\r\n                        console.log(\"SMS not sent\")\r\n                    });\r\n\r\n                }}\r\n            >\r\n                {({ errors, touched, submitForm }) => (\r\n                    <Form>\r\n                        <Box margin={'20px 0px 20px 0px '}>\r\n                            <Grid container>\r\n                                <Grid item md={4}>\r\n                                </Grid>\r\n                                <Grid item xs={12} md={4}>\r\n                                    <Field\r\n                                        name='countryCode'\r\n                                    >\r\n                                        {({\r\n                                            field\r\n                                        }: FieldProps<ModelVerifyNumber>) => (\r\n                                            <TextField\r\n                                                id=\"standard-select-currency\"\r\n                                                value={field.value || ''}\r\n                                                onChange={field.onChange}\r\n                                                name={field.name}\r\n                                                variant=\"outlined\"\r\n                                                error={!!errors.countryCode && touched.phone}\r\n                                                helperText={!!errors.countryCode && touched.countryCode ? errors.countryCode : ''}\r\n                                                label=\"Country\"\r\n                                                select\r\n                                                fullWidth\r\n                                                className={classes.rootSelect}\r\n                                            >\r\n                                                {props.countryCodeArray.map((item, key) =>\r\n                                                    <MenuItem key={key} value={item.dial_code}>{`+${item.dial_code}`}</MenuItem>\r\n                                                )}\r\n\r\n                                            </TextField>\r\n\r\n                                        )}\r\n                                    </Field>\r\n                                </Grid>\r\n                                <Grid item md={4}>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                        <Box margin={'20px 0px 20px 0px '}>\r\n                            <Grid container>\r\n                                <Grid item md={4}>\r\n                                </Grid>\r\n                                <Grid item xs={12} md={4}>\r\n                                    <Field\r\n                                        name='phone'\r\n                                    >\r\n                                        {({\r\n                                            field\r\n                                        }: FieldProps<ModelVerifyNumber>) => (\r\n                                            <TextField\r\n                                                value={field.value || ''}\r\n                                                onChange={field.onChange}\r\n                                                name={field.name}\r\n                                                variant=\"outlined\"\r\n                                                label=\"Phone Number\"\r\n                                                error={!!errors.phone && touched.phone}\r\n                                                helperText={!!errors.phone && touched.phone ? errors.phone : ''}\r\n                                                fullWidth\r\n                                            />\r\n                                        )}\r\n                                    </Field>\r\n                                </Grid>\r\n                                <Grid item md={4}>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                        <Box>\r\n                            <Hidden only=\"xs\">\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={submitForm}\r\n                                    className={classes.rootVerifyButton}\r\n                                >\r\n                                    Login\r\n                                </Button>\r\n                            </Hidden>\r\n\r\n                            <Hidden only=\"lg\" smUp>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={submitForm}\r\n                                    fullWidth\r\n                                    className={classes.rootVerifyButton}\r\n                                >\r\n                                    Verify Number\r\n                                </Button>\r\n                            </Hidden>\r\n\r\n                        </Box>\r\n                        <Grid container>\r\n                            <Grid item md={4}>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={4}>\r\n                                <Box marginTop=\"20px\">\r\n                                    <div id=\"recaptcha-container\" />\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item md={4}>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </Form>\r\n                )}\r\n            </Formik>}\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\nLogin.prototype = {\r\n    countryCodeArray: PropTypes.arrayOf(PropTypes.shape({\r\n        code: PropTypes.string,\r\n        dial_code: PropTypes.string\r\n    }))\r\n}"]},"metadata":{},"sourceType":"module"}