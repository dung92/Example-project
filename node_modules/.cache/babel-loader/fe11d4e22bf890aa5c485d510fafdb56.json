{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-example\\\\src\\\\component\\\\OTP\\\\OTP.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Box, Typography, Link } from '@material-ui/core';\nimport { countryCode } from '../../API/CountryCode';\nimport { VerificationCode } from '../../pages/VerificationCode';\nimport { VerificationNumber } from '../../pages/VerificationNumber';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OTP = () => {\n  _s();\n\n  const [showOTP, setShowOTP] = useState(false);\n  const [valueFirstOTP, setValueFirstOTP] = useState(0);\n  const [valueSecondOTP, setValueSecondOTP] = useState(0);\n  const [valueThirdOTP, setValueThirdOTP] = useState(0);\n  const [valueFourOTP, setValueFourOTP] = useState(0);\n  const [valueFiveOTP, setValueFiveOTP] = useState(0);\n  const [valueSixOTP, setValueSixOTP] = useState(0);\n  const [valueSubmit, setValueSubmit] = useState({\n    phone: 0,\n    countryCode: 65\n  });\n  const [final, setfinal] = useState({});\n  const [errorOTP, setErrorOTP] = useState({\n    errorValidNumber: '',\n    errorNullOTP: ''\n  });\n  const [openLogin, setOpenLogin] = useState(false);\n  useEffect(() => {\n    setErrorOTP({\n      errorValidNumber: '',\n      errorNullOTP: ''\n    });\n  }, [showOTP]);\n  useEffect(() => {\n    // Update the document title using the browser API\n    const numbers = /^[0-9]+$/; // if (valueFirstOTP === undefined || valueSecondOTP === undefined || valueThirdOTP === undefined || valueFourOTP === undefined || valueFiveOTP === undefined || valueSixOTP === undefined) {\n    //   if (valueFirstOTP !== undefined || valueSecondOTP !== undefined || valueThirdOTP !== undefined || valueFourOTP !== undefined || valueFiveOTP !== undefined || valueSixOTP !== undefined) {\n    //     if (!valueFirstOTP.match(numbers) || !valueSecondOTP.match(numbers) || !valueThirdOTP.match(numbers) || !valueFourOTP.match(numbers) || !valueFiveOTP.match(numbers) || !valueSixOTP.match(numbers)) {\n    //       setErrorOTP({ errorValidNumber: 'Invaid OTP', errorNullOTP: 'Please fill all input' })\n    //     } else {\n    //       setErrorOTP({ errorValidNumber: '', errorNullOTP: '' })\n    //     }\n    //   } else {\n    //     setErrorOTP({ errorValidNumber: '', errorNullOTP: 'Please fill all input' })\n    //   }\n    // } else {\n    //   if (valueFirstOTP !== '' && valueSecondOTP !== '' && valueThirdOTP !== '' && valueFourOTP !== '' && valueFiveOTP !== '' && valueSixOTP !== '') {\n    //     const valueInputOtp = `${valueFirstOTP}${valueSecondOTP}${valueThirdOTP}${valueFourOTP}${valueFiveOTP}${valueSixOTP}`;\n    //       Object.getPrototypeOf(final).confirm(valueInputOtp).then((result: any) => {\n    //         // success\n    //         console.log('ok-done')\n    //       }).catch((err: any) => {\n    //         alert(\"Wrong code\");\n    //       })\n    //   }\n    //   if (valueFirstOTP !== '' || valueSecondOTP !== '' || valueThirdOTP !== '' || valueFourOTP !== '' || valueFiveOTP !== '' || valueSixOTP !== '') {\n    //     if (!valueFirstOTP.match(numbers) || !valueSecondOTP.match(numbers) || !valueThirdOTP.match(numbers) || !valueFourOTP.match(numbers) || !valueFiveOTP.match(numbers) || !valueSixOTP.match(numbers)) {\n    //       setErrorOTP({ errorValidNumber: 'Invaid OTP', errorNullOTP: '' })\n    //     } else {\n    //       setErrorOTP({ errorValidNumber: '', errorNullOTP: '' })\n    //     }\n    //   } else {\n    //     setErrorOTP({ errorValidNumber: '', errorNullOTP: 'Please fill all input' })\n    //   }\n    // }\n  }, [valueFirstOTP, valueSecondOTP, valueThirdOTP, valueFourOTP, valueFiveOTP, valueSixOTP]); // const changeInputFirst = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //   setValueFirstOTP(event.target.value)\n  // }\n  // const changeInputSecond = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //   setValueSecondOTP(event.target.value)\n  // }\n  // const changeInputThird = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //   setValueThirdOTP(event.target.value)\n  // }\n  // const changeInputFour = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //   setValueFourOTP(event.target.value)\n  // }\n  // const changeInputFive = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //   setValueFiveOTP(event.target.value)\n  // }\n  // const changeInputSix = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //   setValueSixOTP(event.target.value)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      textAlign: \"left\",\n      padding: \"20px\",\n      marginTop: \"20px\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h4\",\n        children: \"DayOne\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      padding: \"20px\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: !showOTP ? /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h4\",\n          children: \"Let's get started!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h4\",\n          children: [\"Please enter \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 152\n          }, this), \" verification code.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 98\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: !showOTP ? /*#__PURE__*/_jsxDEV(VerificationNumber, {\n          setValueSubmit: setValueSubmit,\n          setfinal: setfinal,\n          setShowOTP: setShowOTP,\n          countryCodeArray: countryCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(VerificationCode, {\n          valueFirstOTP: valueFirstOTP,\n          valueSecondOTP: valueSecondOTP,\n          valueThirdOTP: valueThirdOTP,\n          valueFourOTP: valueFourOTP,\n          valueFiveOTP: valueFiveOTP,\n          valueSixOTP: valueSixOTP,\n          changeInputFirst: changeInputFirst,\n          changeInputSecond: changeInputSecond,\n          changeInputThird: changeInputThird,\n          changeInputFour: changeInputFour,\n          changeInputFive: changeInputFive,\n          changeInputSix: changeInputSix,\n          errorOTP: errorOTP\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: showOTP && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"A code has been sent to \", valueSubmit.phone, \" via SMS\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        fontWeight: \"bold\",\n        children: showOTP && /*#__PURE__*/_jsxDEV(Link, {\n          href: \"#\",\n          underline: \"none\",\n          children: \"RESEND CODE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        fontWeight: \"bold\",\n        children: showOTP && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"REGITER WITH ANOTHER NUMBER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OTP, \"5lWJgTVMdqJQIG8iUH6MJyZFjzg=\");\n\n_c = OTP;\nexport default OTP;\n\nvar _c;\n\n$RefreshReg$(_c, \"OTP\");","map":{"version":3,"sources":["D:/project-example/src/component/OTP/OTP.tsx"],"names":["React","useEffect","useState","Box","Typography","Link","countryCode","VerificationCode","VerificationNumber","OTP","showOTP","setShowOTP","valueFirstOTP","setValueFirstOTP","valueSecondOTP","setValueSecondOTP","valueThirdOTP","setValueThirdOTP","valueFourOTP","setValueFourOTP","valueFiveOTP","setValueFiveOTP","valueSixOTP","setValueSixOTP","valueSubmit","setValueSubmit","phone","final","setfinal","errorOTP","setErrorOTP","errorValidNumber","errorNullOTP","openLogin","setOpenLogin","numbers","changeInputFirst","changeInputSecond","changeInputThird","changeInputFour","changeInputFive","changeInputSix"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Box, Typography, Link, } from '@material-ui/core';\r\nimport { ModelOTP } from './model';\r\nimport { VerifyNumber } from './VerifyNumber';\r\nimport { countryCode } from '../../API/CountryCode';\r\nimport { VerificationCode } from '../../pages/VerificationCode';\r\nimport { ModelVerifyNumber } from '../model/ModelVerifyNumber';\r\nimport { VerificationNumber } from '../../pages/VerificationNumber';\r\n\r\nconst OTP = () => {\r\n  const [showOTP, setShowOTP] = useState(false);\r\n  const [valueFirstOTP, setValueFirstOTP] = useState<number>(0);\r\n  const [valueSecondOTP, setValueSecondOTP] = useState<number>(0);\r\n  const [valueThirdOTP, setValueThirdOTP] = useState<number>(0);\r\n  const [valueFourOTP, setValueFourOTP] = useState<number>(0);\r\n  const [valueFiveOTP, setValueFiveOTP] = useState<number>(0);\r\n  const [valueSixOTP, setValueSixOTP] = useState<number>(0);\r\n  const [valueSubmit, setValueSubmit] = useState<ModelVerifyNumber>({\r\n    phone: 0,\r\n    countryCode: 65\r\n  });\r\n  const [final, setfinal] = useState({});\r\n  const [errorOTP, setErrorOTP] = useState({\r\n    errorValidNumber: '',\r\n    errorNullOTP: ''\r\n  })\r\n\r\n  const [openLogin, setOpenLogin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setErrorOTP({\r\n      errorValidNumber: '',\r\n      errorNullOTP: ''\r\n    })\r\n  }, [showOTP])\r\n\r\n\r\n  useEffect(() => {\r\n    // Update the document title using the browser API\r\n    const numbers = /^[0-9]+$/;\r\n\r\n    // if (valueFirstOTP === undefined || valueSecondOTP === undefined || valueThirdOTP === undefined || valueFourOTP === undefined || valueFiveOTP === undefined || valueSixOTP === undefined) {\r\n    //   if (valueFirstOTP !== undefined || valueSecondOTP !== undefined || valueThirdOTP !== undefined || valueFourOTP !== undefined || valueFiveOTP !== undefined || valueSixOTP !== undefined) {\r\n    //     if (!valueFirstOTP.match(numbers) || !valueSecondOTP.match(numbers) || !valueThirdOTP.match(numbers) || !valueFourOTP.match(numbers) || !valueFiveOTP.match(numbers) || !valueSixOTP.match(numbers)) {\r\n    //       setErrorOTP({ errorValidNumber: 'Invaid OTP', errorNullOTP: 'Please fill all input' })\r\n    //     } else {\r\n    //       setErrorOTP({ errorValidNumber: '', errorNullOTP: '' })\r\n    //     }\r\n    //   } else {\r\n    //     setErrorOTP({ errorValidNumber: '', errorNullOTP: 'Please fill all input' })\r\n    //   }\r\n    // } else {\r\n    //   if (valueFirstOTP !== '' && valueSecondOTP !== '' && valueThirdOTP !== '' && valueFourOTP !== '' && valueFiveOTP !== '' && valueSixOTP !== '') {\r\n    //     const valueInputOtp = `${valueFirstOTP}${valueSecondOTP}${valueThirdOTP}${valueFourOTP}${valueFiveOTP}${valueSixOTP}`;\r\n    //       Object.getPrototypeOf(final).confirm(valueInputOtp).then((result: any) => {\r\n    //         // success\r\n    //         console.log('ok-done')\r\n    //       }).catch((err: any) => {\r\n    //         alert(\"Wrong code\");\r\n    //       })\r\n        \r\n    //   }\r\n    //   if (valueFirstOTP !== '' || valueSecondOTP !== '' || valueThirdOTP !== '' || valueFourOTP !== '' || valueFiveOTP !== '' || valueSixOTP !== '') {\r\n    //     if (!valueFirstOTP.match(numbers) || !valueSecondOTP.match(numbers) || !valueThirdOTP.match(numbers) || !valueFourOTP.match(numbers) || !valueFiveOTP.match(numbers) || !valueSixOTP.match(numbers)) {\r\n    //       setErrorOTP({ errorValidNumber: 'Invaid OTP', errorNullOTP: '' })\r\n    //     } else {\r\n    //       setErrorOTP({ errorValidNumber: '', errorNullOTP: '' })\r\n    //     }\r\n    //   } else {\r\n    //     setErrorOTP({ errorValidNumber: '', errorNullOTP: 'Please fill all input' })\r\n    //   }\r\n    // }\r\n\r\n\r\n  }, [valueFirstOTP, valueSecondOTP, valueThirdOTP, valueFourOTP, valueFiveOTP, valueSixOTP]);\r\n\r\n  // const changeInputFirst = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n  //   setValueFirstOTP(event.target.value)\r\n  // }\r\n\r\n  // const changeInputSecond = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n  //   setValueSecondOTP(event.target.value)\r\n  // }\r\n\r\n  // const changeInputThird = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n  //   setValueThirdOTP(event.target.value)\r\n  // }\r\n\r\n  // const changeInputFour = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n  //   setValueFourOTP(event.target.value)\r\n  // }\r\n\r\n  // const changeInputFive = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n  //   setValueFiveOTP(event.target.value)\r\n  // }\r\n\r\n  // const changeInputSix = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n  //   setValueSixOTP(event.target.value)\r\n  // }\r\n\r\n  return (\r\n    <Box>\r\n      <Box textAlign=\"left\" padding=\"20px\" marginTop=\"20px\">\r\n        <Typography variant=\"h4\" component=\"h4\" >DayOne</Typography>\r\n      </Box>\r\n      <Box padding={\"20px\"}>\r\n        <Box>\r\n          {!showOTP ? <Typography variant=\"h4\" component=\"h4\" >Let's get started!</Typography> : <Typography variant=\"h4\" component=\"h4\" >Please enter <br /> verification code.</Typography>}\r\n        </Box>\r\n        <Box>\r\n          {!showOTP ? <VerificationNumber setValueSubmit={setValueSubmit} setfinal={setfinal} setShowOTP={setShowOTP} countryCodeArray ={countryCode}/> :\r\n           <VerificationCode valueFirstOTP={valueFirstOTP} valueSecondOTP={valueSecondOTP} valueThirdOTP={valueThirdOTP} valueFourOTP={valueFourOTP} valueFiveOTP={valueFiveOTP} valueSixOTP={valueSixOTP} changeInputFirst={changeInputFirst} changeInputSecond={changeInputSecond} changeInputThird={changeInputThird} changeInputFour={changeInputFour} changeInputFive={changeInputFive} changeInputSix={changeInputSix} errorOTP={errorOTP}/>\r\n          }\r\n\r\n        </Box>\r\n        <Box>\r\n          {showOTP && <p>A code has been sent to {valueSubmit.phone} via SMS</p>}\r\n        </Box>\r\n        <Box fontWeight=\"bold\">\r\n          {showOTP && <Link href=\"#\" underline=\"none\">\r\n            RESEND CODE\r\n          </Link>}\r\n        </Box>\r\n\r\n        <Box fontWeight=\"bold\">\r\n          {showOTP && <p>REGITER WITH ANOTHER NUMBER</p>}\r\n        </Box>\r\n      </Box>\r\n\r\n    </Box >\r\n  )\r\n}\r\n\r\nexport default OTP;"]},"metadata":{},"sourceType":"module"}